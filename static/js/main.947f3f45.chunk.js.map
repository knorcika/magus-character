{"version":3,"sources":["components/App/App.js","serviceWorker.js","index.js"],"names":["initValues","characters","characterIndex","menuIndex","App","props","swipe","index","setState","storeStates","isLocalStorageSupported","localStorage","setItem","getItem","state","Object","assign","values","JSON","parse","this","stringify","key","newState","push","name","splice","value","_","set","equipmentsPath","equipments","get","quantity","placing","skillsPath","skills","point","degree","weaponsPath","weapons","reactSwipeEl","swipeOptions","startSlide","disableScroll","continuous","draggable","transitionEnd","character","className","onClick","slide","ref","el","keys","map","level","race","class","type","selectCharacter","window","confirm","removeCharacter","createCharacter","strength","onChange","event","setCharacterProperty","target","agility","stamina","dexterity","health","beauty","intelligence","willpower","astral","detection","psiSchoolType","psiLevel","psiCurrent","psiMax","currentHp","maxHp","currentFp","maxFp","fpPerLevel","religion","homeland","school","experience","astralResSubliminal","astralResStatPsiArmor","astralResDinPsiArmor","astralResMagic","parseInt","mentalResSubliminal","mentalResStatPsiArmor","mentalResDinPsiArmor","mentalResMagic","armorType","armorMaterial","armorMGT","armorWeight","armorMaxSFE","armorSTP","shieldType","shieldMaterial","shieldMGT","shieldWeight","shieldDefense","shieldSTP","shieldDamage","weaponPointPerLevel","baseStartValue","baseAttackValue","baseDefenseValue","baseAimingValue","startValue","attackValue","defenseValue","aimingValue","damage","role","weaponIndex","removeWeapon","modStartValue","modAttackValue","modDefenseValue","modAimingValue","addWeapon","manaPerLevel","currentMana","maxMana","manaRecharge","skillPointPerLevel","currentSkillPoint","skill","removeSkill","addSkill","gold","silver","copper","mithrill","otherWealth","equipment","removeEquipment","addEquipment","notes","React","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.947f3f45.chunk.js","sourcesContent":["import React from 'react';\nimport ReactSwipe from 'react-swipe';\n// eslint-disable-next-line\nimport _ from 'lodash';\nimport './App.scss';\nconst localStorageKey = 'magic-characters';\nconst initValues = {\n  characters: [\n    // {\n    //   name: '',\n    //   strength: 0,\n    //   agility: 0,\n    //   stamina: 0,\n    //   dexterity: 0,\n    //   health: 0,\n    //   beauty: 0,\n    //   intelligence: 0,\n    //   willpower: 0,\n    //   astral: 0,\n    //   detection: 0,\n    //\n    //   class: '',\n    //   race: '',\n    //   character: '',\n    //   religion: '',\n    //   homeland: '',\n    //   school: '',\n    //\n    //   psi: {\n    //     schoolType: '',\n    //     degree: '',\n    //     maxPsi: '',\n    //     currentPsi: '',\n    //   },\n    //\n    //   maxHp: 0,\n    //   currentHp: 0,\n    //   maxFp: 0,\n    //   currentFp: 0,\n    //   fpPerLevel: '',\n    //\n    //   skillPoint: 0,\n    //   skills: [],\n    //   weapons: [],\n    //   mana: {},\n    //\n    //   wealth: {},\n    //   magicResistance: {},\n    //\n    //   armor: {},\n    //   shield: {},\n    //\n    //   equipments: [],\n    // }\n    {}\n  ],\n  characterIndex: 0,\n  menuIndex: 0,\n};\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.isLocalStorageSupported =\n\t\t\tlocalStorage && typeof localStorage.setItem === 'function' && typeof localStorage.getItem === 'function';\n\t\tthis.state = Object.assign({}, initValues);\n\n    if (this.isLocalStorageSupported) {\n      const values = localStorage.getItem(localStorageKey);\n      if (values) {\n        this.state = Object.assign({}, initValues, JSON.parse(values));\n      }\n    }\n\t}\n\n\tstoreStates() {\n    if (this.isLocalStorageSupported) {\n      localStorage.setItem(localStorageKey, JSON.stringify(this.state));\n    }\n\t}\n\n  resetValues() {\n    this.setState(Object.assign({}, initValues), this.storeStates);\n  }\n\n\n  onChildUpdate(key, newState) {\n\n    this.setState({ [key]: newState }, this.storeStates);\n  }\n\n  swipe = index => {\n    this.setState({ menuIndex: index }, this.storeStates);\n  }\n\n  createCharacter() {\n\t  const characters = [...this.state.characters];\n\t  characters.push({name: 'Új karakter'});\n    this.setState({ characters }, this.storeStates);\n  }\n\n  removeCharacter(key) {\n    let characters = [...this.state.characters];\n    characters.splice(key, 1);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  selectCharacter(key) {\n    this.setState({ characterIndex: key }, this.storeStates);\n  }\n\n  setCharacterProperty(key, value) {\n    let characters = [...this.state.characters];\n    _.set(characters, `${this.state.characterIndex}.${key}`, value);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  addEquipment() {\n    let characters = [...this.state.characters];\n    const equipmentsPath = `${this.state.characterIndex}.equipments`;\n    let equipments = _.get(characters, equipmentsPath) || [];\n    equipments.push({\n      name: '',\n      quantity: '',\n      placing: ''\n    });\n    _.set(characters, equipmentsPath, equipments);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  removeEquipment(key) {\n    let characters = [...this.state.characters];\n    const equipmentsPath = `${this.state.characterIndex}.equipments`;\n    let equipments = _.get(characters, equipmentsPath) || [];\n    equipments.splice(key, 1);\n    _.set(characters, equipmentsPath, equipments);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  addSkill() {\n    let characters = [...this.state.characters];\n    const skillsPath = `${this.state.characterIndex}.skills`;\n    let skills = _.get(characters, skillsPath) || [];\n    skills.push({\n      name: '',\n      point: '',\n      degree: ''\n    });\n    _.set(characters, skillsPath, skills);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  removeSkill(key) {\n    let characters = [...this.state.characters];\n    const skillsPath = `${this.state.characterIndex}.skills`;\n    let skills = _.get(characters, skillsPath) || [];\n    skills.splice(key, 1);\n    _.set(characters, skillsPath, skills);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  addWeapon() {\n    let characters = [...this.state.characters];\n    const weaponsPath = `${this.state.characterIndex}.weapons`;\n    let weapons = _.get(characters, weaponsPath) || [];\n    weapons.push({});\n    _.set(characters, weaponsPath, weapons);\n    this.setState({ characters }, this.storeStates);\n  }\n\n  removeWeapon(key) {\n    let characters = [...this.state.characters];\n    const weaponsPath = `${this.state.characterIndex}.weapons`;\n    let weapons = _.get(characters, weaponsPath) || [];\n    weapons.splice(key, 1);\n    _.set(characters, weaponsPath, weapons);\n    this.setState({ characters }, this.storeStates);\n  }\n\n\trender() {\n    let reactSwipeEl;\n\n    const swipeOptions = {\n      startSlide: this.state.menuIndex || 0,\n      disableScroll: false,\n      continuous: false,\n      draggable: true,\n      transitionEnd: this.swipe,\n    };\n\n    const character = this.state.characters[this.state.characterIndex] || {};\n\n\t\treturn (\n      <div className={`container-lg app`}>\n        <div className={'row'}>\n          <div className={'col pl-0 pr-0 bg-white'}>\n            <ul className=\"nav nav-tabs\">\n              <li className=\"nav-item\">\n                <div className={`nav-link ${this.state.menuIndex === 0 ? 'active' : ''}`} onClick={() => reactSwipeEl.slide(0, 300)}>\n                  <i className={'bi bi-list-ul'}></i>\n                </div>\n              </li>\n              <li className=\"nav-item\">\n                <div className={`nav-link ${this.state.menuIndex === 1 ? 'active' : ''}`} onClick={() => reactSwipeEl.slide(1, 300)}>\n                  <i className={'bi bi-person-fill'}></i>\n                </div>\n              </li>\n              <li className=\"nav-item\">\n                <div className={`nav-link ${this.state.menuIndex === 2 ? 'active' : ''}`} onClick={() => reactSwipeEl.slide(2, 300)}>\n                  <i className={'bi bi-joystick'}></i>\n                </div>\n              </li>\n              <li className=\"nav-item\">\n                <div className={`nav-link ${this.state.menuIndex === 3 ? 'active' : ''}`} onClick={() => reactSwipeEl.slide(3, 300)}>\n                  <i className={'bi bi-hexagon-fill'}></i>\n                </div>\n              </li>\n              <li className=\"nav-item\">\n                <div className={`nav-link ${this.state.menuIndex === 4 ? 'active' : ''}`} onClick={() => reactSwipeEl.slide(4, 300)}>\n                  <i className={'bi bi-bag-fill'}></i>\n                </div>\n              </li>\n              <li className=\"nav-item\">\n                <div className={`nav-link ${this.state.menuIndex === 5 ? 'active' : ''}`} onClick={() => reactSwipeEl.slide(5, 300)}>\n                  <i className={'bi bi-sticky-fill'}></i>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className={'row'}>\n          <div className={'col p-0'}>\n            <ReactSwipe\n              className=\"carousel\"\n              swipeOptions={swipeOptions}\n              ref={el => (reactSwipeEl = el)}\n            >\n              <div className={'panel'}>\n                {Object.keys(this.state.characters).map(key => {\n                  return (\n                    <div className={'character d-flex justify-content-between'} key={key}>\n                      <div className=\"align-self-start\">\n                        <p className={'m-0'}>{this.state.characters[key].name}</p>\n                        <p className={'m-0 x-sm-font-size'}>\n                          (Lvl. {this.state.characters[key].level || 1}) {this.state.characters[key].race} {this.state.characters[key].class}\n                        </p>\n                      </div>\n                      <div className=\"align-self-end\">\n                        {key !== this.state.characterIndex &&\n                          <button type=\"button\" className={'btn btn-success'} onClick={() => this.selectCharacter(key)}>\n                          <i className={'bi bi-check-circle-fill'}></i>\n                        </button>}\n                        <button type=\"button\" className={'btn btn-danger ml-1'} onClick={() => {\n                          const isConfirmed = window.confirm('Are you sure you want to remove this character?');\n                          if (isConfirmed) {\n                            this.removeCharacter(key)\n                          }\n                        }}>\n                          <i className={'bi bi-dash-circle-fill'}></i>\n                        </button>\n                      </div>\n                    </div>\n                  )\n                })}\n                <div>\n                  <button type=\"button\" className={'btn btn-primary'} onClick={() => this.createCharacter()}>\n                    <i className={'bi bi-plus-circle-fill'}></i> Új karakter\n                  </button>\n                </div>\n              </div>\n              <div className={'panel'}>\n                <div className=\"separator\">Tulajdonságok</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Erő</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.strength || ''} onChange={event => this.setCharacterProperty('strength', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Gyorsaság</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.agility || ''} onChange={event => this.setCharacterProperty('agility', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Állóképesség</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.stamina || ''} onChange={event => this.setCharacterProperty('stamina', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Ügyesség</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.dexterity || ''} onChange={event => this.setCharacterProperty('dexterity', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Egészség</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.health || ''} onChange={event => this.setCharacterProperty('health', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Szépség</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.beauty || ''} onChange={event => this.setCharacterProperty('beauty', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Inteligencia</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.intelligence || ''} onChange={event => this.setCharacterProperty('intelligence', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Akaraterő</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.willpower || ''} onChange={event => this.setCharacterProperty('willpower', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Asztrál</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.astral || ''} onChange={event => this.setCharacterProperty('astral', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Érzékelés</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.detection || ''} onChange={event => this.setCharacterProperty('detection', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Pszi &psi;</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Iskola típus</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.psiSchoolType || ''} onChange={event => this.setCharacterProperty('psiSchoolType', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Használat foka</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.psiLevel || ''} onChange={event => this.setCharacterProperty('psiLevel', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Aktuális &psi;</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.psiCurrent || ''} onChange={event => this.setCharacterProperty('psiCurrent', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Max &psi;</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.psiMax || ''} onChange={event => this.setCharacterProperty('psiMax', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Életerő</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Aktuális Ép.</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.currentHp || ''} onChange={event => this.setCharacterProperty('currentHp', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Max Ép.</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.maxHp || ''} onChange={event => this.setCharacterProperty('maxHp', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Aktuális Fp.</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.currentFp || ''} onChange={event => this.setCharacterProperty('currentFp', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Max Fp.</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.maxFp || ''} onChange={event => this.setCharacterProperty('maxFp', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Fp/szint</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.fpPerLevel || ''} onChange={event => this.setCharacterProperty('fpPerLevel', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Karakter</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Név</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.name || ''} onChange={event => this.setCharacterProperty('name', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Kaszt</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.class || ''} onChange={event => this.setCharacterProperty('class', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Faj</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.race || ''} onChange={event => this.setCharacterProperty('race', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Jellem</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.character || ''} onChange={event => this.setCharacterProperty('character', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Vallás</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.religion || ''} onChange={event => this.setCharacterProperty('religion', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Szülőföld</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.homeland || ''} onChange={event => this.setCharacterProperty('homeland', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Iskola</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.school || ''} onChange={event => this.setCharacterProperty('school', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Tapasztalat</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.experience || ''} onChange={event => this.setCharacterProperty('experience', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Szint</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.level || ''} onChange={event => this.setCharacterProperty('level', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Asztrál ellenállás</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Tudatalatti</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.astralResSubliminal || ''} onChange={event => this.setCharacterProperty('astralResSubliminal', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Stat. &psi; pajzs</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.astralResStatPsiArmor || ''} onChange={event => this.setCharacterProperty('astralResStatPsiArmor', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Din. &psi; pajzs</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.astralResDinPsiArmor || ''} onChange={event => this.setCharacterProperty('astralResDinPsiArmor', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Mágikus</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.astralResMagic || ''} onChange={event => this.setCharacterProperty('astralResMagic', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Összesen</div>\n                  <div className=\"align-self-end\">\n                    {\n                      (parseInt(character.astralResSubliminal) || 0) +\n                      (parseInt(character.astralResStatPsiArmor) || 0) +\n                      (parseInt(character.astralResDinPsiArmor) || 0) +\n                      (parseInt(character.astralResMagic) || 0)\n                    }\n                  </div>\n                </div>\n\n                <div className=\"separator\">Mentál ellenállás</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Tudatalatti</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.mentalResSubliminal || ''} onChange={event => this.setCharacterProperty('mentalResSubliminal', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Stat. &psi; pajzs</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.mentalResStatPsiArmor || ''} onChange={event => this.setCharacterProperty('mentalResStatPsiArmor', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Din. &psi; pajzs</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.mentalResDinPsiArmor || ''} onChange={event => this.setCharacterProperty('mentalResDinPsiArmor', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Mágikus</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.mentalResMagic || ''} onChange={event => this.setCharacterProperty('mentalResMagic', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Összesen</div>\n                  <div className=\"align-self-end\">\n                    {\n                      (parseInt(character.mentalResSubliminal) || 0) +\n                      (parseInt(character.mentalResStatPsiArmor) || 0) +\n                      (parseInt(character.mentalResDinPsiArmor) || 0) +\n                      (parseInt(character.mentalResMagic) || 0)\n                    }\n                  </div>\n                </div>\n\n                <div className=\"separator\">Vértezet</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Típus</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.armorType || ''} onChange={event => this.setCharacterProperty('armorType', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Anyaga</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.armorMaterial || ''} onChange={event => this.setCharacterProperty('armorMaterial', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">MGT</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.armorMGT || ''} onChange={event => this.setCharacterProperty('armorMGT', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Súlya</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.armorWeight || ''} onChange={event => this.setCharacterProperty('armorWeight', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Max SFÉ</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.armorMaxSFE || ''} onChange={event => this.setCharacterProperty('armorMaxSFE', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">STP</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.armorSTP || ''} onChange={event => this.setCharacterProperty('armorSTP', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Pajzs</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Típus</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.shieldType || ''} onChange={event => this.setCharacterProperty('shieldType', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Anyaga</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.shieldMaterial || ''} onChange={event => this.setCharacterProperty('shieldMaterial', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">MGT</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.shieldMGT || ''} onChange={event => this.setCharacterProperty('shieldMGT', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Súlya</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.shieldWeight || ''} onChange={event => this.setCharacterProperty('shieldWeight', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Védekező érték</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.shieldDefense || ''} onChange={event => this.setCharacterProperty('shieldDefense', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">STP</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.shieldSTP || ''} onChange={event => this.setCharacterProperty('shieldSTP', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Sebzés</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.shieldDamage || ''} onChange={event => this.setCharacterProperty('shieldDamage', event.target.value)}/>\n                  </div>\n                </div>\n              </div>\n              <div className={'panel'}>\n                <div className=\"separator\">Fegyverek</div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Pont/Szint</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.weaponPointPerLevel || ''} onChange={event => this.setCharacterProperty('weaponPointPerLevel', event.target.value)}/>\n                  </div>\n                </div>\n\n                <table className={'table-sm table-striped w-100'}>\n                  <thead>\n                    <tr>\n                      <th>Név</th>\n                      <th>KÉ</th>\n                      <th>TÉ</th>\n                      <th>VÉ</th>\n                      <th>CÉ</th>\n                      <th>Sebzés</th>\n                      <th>Akció</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  <tr>\n                    <td>Alap</td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.baseStartValue}\n                             onChange={event => this.setCharacterProperty(`baseStartValue`, event.target.value)}/>\n                    </td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.baseAttackValue}\n                             onChange={event => this.setCharacterProperty(`baseAttackValue`, event.target.value)}/>\n                    </td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.baseDefenseValue}\n                             onChange={event => this.setCharacterProperty(`baseDefenseValue`, event.target.value)}/>\n                    </td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.baseAimingValue}\n                             onChange={event => this.setCharacterProperty(`baseAimingValue`, event.target.value)}/>\n                    </td>\n                    <td></td>\n                    <td></td>\n                  </tr>\n\n                  {Object.keys(character.weapons || []).map(key => {\n                    return (\n                      <tr key={key}>\n                        <td>\n                          <input className={'weapon-input'} type=\"text\" value={character.weapons[key].name || ''}\n                                 onChange={event => this.setCharacterProperty(`weapons.${key}.name`, event.target.value)}/>\n                        </td>\n                        <td>\n                          <input className={'weapon-input'} type=\"number\" value={character.weapons[key].startValue || ''}\n                                 onChange={event => this.setCharacterProperty(`weapons.${key}.startValue`, event.target.value)}/>\n                        </td>\n                        <td>\n                          <input className={'weapon-input'} type=\"number\" value={character.weapons[key].attackValue || ''}\n                                 onChange={event => this.setCharacterProperty(`weapons.${key}.attackValue`, event.target.value)}/>\n                        </td>\n                        <td>\n                          <input className={'weapon-input'} type=\"number\" value={character.weapons[key].defenseValue || ''}\n                                 onChange={event => this.setCharacterProperty(`weapons.${key}.defenseValue`, event.target.value)}/>\n                        </td>\n                        <td>\n                          <input className={'weapon-input'} type=\"number\" value={character.weapons[key].aimingValue || ''}\n                                 onChange={event => this.setCharacterProperty(`weapons.${key}.aimingValue`, event.target.value)}/>\n                        </td>\n                        <td>\n                          <input className={'weapon-input'} type=\"text\" value={character.weapons[key].damage || ''}\n                                 onChange={event => this.setCharacterProperty(`weapons.${key}.damage`, event.target.value)}/>\n                        </td>\n                        <td className={'text-right'}>\n                          <div className={'btn-group'} role=\"group\">\n                            {key !== character.weaponIndex &&\n                            <button type=\"button\" className={'btn btn-success'} onClick={() => this.setCharacterProperty('weaponIndex', key)}>\n                              <i className={'bi bi-check-circle-fill'}></i>\n                            </button>}\n                            <button type=\"button\" className={'btn btn-danger'} onClick={() => {\n                              const isConfirmed = window.confirm('Are you sure you want to remove this weapon?');\n                              if (isConfirmed) {\n                                this.removeWeapon(key)\n                              }\n                            }}>\n                              <i className={'bi bi-dash-circle-fill'}></i>\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n\n                  <tr>\n                    <td>Módosító</td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.modStartValue}\n                             onChange={event => this.setCharacterProperty(`modStartValue`, event.target.value)}/>\n                    </td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.modAttackValue}\n                             onChange={event => this.setCharacterProperty(`modAttackValue`, event.target.value)}/>\n                    </td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.modDefenseValue}\n                             onChange={event => this.setCharacterProperty(`modDefenseValue`, event.target.value)}/>\n                    </td>\n                    <td>\n                      <input className={'weapon-input'} type=\"number\" value={character.modAimingValue}\n                             onChange={event => this.setCharacterProperty(`modAimingValue`, event.target.value)}/>\n                    </td>\n                    <td></td>\n                    <td></td>\n                  </tr>\n                  </tbody>\n                  <tfoot>\n                  <tr>\n                    <th>Összesen</th>\n                    <th>\n                      {\n                        (parseInt(character.baseStartValue) || 0) +\n                        (parseInt(character.modStartValue) || 0) +\n                        (character.weapons[character.weaponIndex] ? (parseInt(character.weapons[character.weaponIndex].startValue) || 0) : 0)\n                      }\n                    </th>\n                    <th>\n                      {\n                        (parseInt(character.baseAttackValue) || 0) +\n                        (parseInt(character.modAttackValue) || 0) +\n                        (character.weapons[character.weaponIndex] ? (parseInt(character.weapons[character.weaponIndex].attackValue) || 0) : 0)\n                      }\n                    </th>\n                    <th>\n                      {\n                        (parseInt(character.baseDefenseValue) || 0) +\n                        (parseInt(character.modDefenseValue) || 0) +\n                        (character.weapons[character.weaponIndex] ? (parseInt(character.weapons[character.weaponIndex].defenseValue) || 0) : 0)\n                      }\n                    </th>\n                    <th>\n                      {\n                        (parseInt(character.baseAimingValue) || 0) +\n                        (parseInt(character.modAimingValue) || 0) +\n                        (character.weapons[character.weaponIndex] ? (parseInt(character.weapons[character.weaponIndex].aimingValue) || 0) : 0)\n                      }\n                    </th>\n                    <th>\n                      {(character.weapons[character.weaponIndex] ? character.weapons[character.weaponIndex].damage || '' : '')}\n                    </th>\n                    <th></th>\n                  </tr>\n                  </tfoot>\n                </table>\n                <button type=\"button\" className={'btn btn-primary mt-2'} onClick={() => this.addWeapon()}>\n                  <i className={'bi bi-plus-circle-fill'}></i> Fegyver hozzáadása\n                </button>\n\n                <div className=\"separator\">Mana</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Szintenként</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.manaPerLevel || ''} onChange={event => this.setCharacterProperty('manaPerLevel', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Aktuális</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.currentMana || ''} onChange={event => this.setCharacterProperty('currentMana', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Maximum</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.maxMana || ''} onChange={event => this.setCharacterProperty('maxMana', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Feltöltés</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.manaRecharge || ''} onChange={event => this.setCharacterProperty('manaRecharge', event.target.value)}/>\n                  </div>\n                </div>\n              </div>\n              <div className={'panel'}>\n\n                <div className=\"separator\">Képzettség pontok</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">KP/szint</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.skillPointPerLevel || ''} onChange={event => this.setCharacterProperty('skillPointPerLevel', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Jelenlegi KP</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.currentSkillPoint || ''} onChange={event => this.setCharacterProperty('currentSkillPoint', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Képzettségek</div>\n\n                <table className={'table-sm table-striped w-100'}>\n                  <thead>\n                    <tr>\n                      <th>Képzettség</th>\n                      <th>Pont</th>\n                      <th>Fok / %</th>\n                      <th>Akció</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.keys(character.skills || []).map(key => {\n                      const skill = character.skills[key];\n                      return (\n                        <tr key={key}>\n                          <td>\n                            <input className={'equipment-input'} type=\"text\" value={skill.name}\n                                   onChange={event => this.setCharacterProperty(`skills.${key}.name`, event.target.value)}/>\n                          </td>\n                          <td>\n                            <input className={'equipment-input'} type=\"text\" value={skill.point}\n                                   onChange={event => this.setCharacterProperty(`skills.${key}.point`, event.target.value)}/>\n                          </td>\n                          <td>\n                            <input className={'equipment-input'} type=\"text\" value={skill.degree}\n                                   onChange={event => this.setCharacterProperty(`skills.${key}.degree`, event.target.value)}/>\n                          </td>\n                          <td>\n                            <button type=\"button\" className={'btn btn-sm btn-danger'} onClick={() => {\n                              const isConfirmed = window.confirm('Are you sure you want to remove this skill?');\n                              if (isConfirmed) {\n                                this.removeSkill(key)\n                              }\n                            }}>\n                              <i className={'bi bi-dash-circle-fill'}></i>\n                            </button>\n                          </td>\n                        </tr>\n                      )})}\n                  </tbody>\n\n                </table>\n                <button type=\"button\" className={'btn btn-primary mt-2'} onClick={() => this.addSkill()}>\n                  <i className={'bi bi-plus-circle-fill'}></i> Képzettség hozzáadása\n                </button>\n              </div>\n              <div className={'panel'}>\n                <div className=\"separator\">Vagyon</div>\n\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Arany</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.gold || ''} onChange={event => this.setCharacterProperty('gold', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Ezüst</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.silver || ''} onChange={event => this.setCharacterProperty('silver', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Réz</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.copper || ''} onChange={event => this.setCharacterProperty('copper', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Mithrill</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"number\" value={character.mithrill || ''} onChange={event => this.setCharacterProperty('mithrill', event.target.value)}/>\n                  </div>\n                </div>\n                <div className={'d-flex justify-content-between'}>\n                  <div className=\"align-self-start\">Egyéb</div>\n                  <div className=\"align-self-end\">\n                    <input type=\"text\" value={character.otherWealth || ''} onChange={event => this.setCharacterProperty('otherWealth', event.target.value)}/>\n                  </div>\n                </div>\n\n                <div className=\"separator\">Felszerelések</div>\n\n                <table className={'table-sm table-striped w-100'}>\n                  <thead>\n                    <tr>\n                      <th>Felszerelés</th>\n                      <th>Mennyiség</th>\n                      <th>Elhelyezés</th>\n                      <th>Akció</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Object.keys(character.equipments || []).map(key => {\n                      const equipment = character.equipments[key];\n                      return (\n                        <tr key={key}>\n                          <td>\n                            <input className={'equipment-input'} type=\"text\" value={equipment.name}\n                                   onChange={event => this.setCharacterProperty(`equipments.${key}.name`, event.target.value)}/>\n                          </td>\n                          <td>\n                            <input className={'equipment-input'} type=\"text\" value={equipment.quantity}\n                                   onChange={event => this.setCharacterProperty(`equipments.${key}.quantity`, event.target.value)}/>\n                          </td>\n                          <td>\n                            <input className={'equipment-input'} type=\"text\" value={equipment.placing}\n                                   onChange={event => this.setCharacterProperty(`equipments.${key}.placing`, event.target.value)}/>\n                          </td>\n                          <td>\n                            <button type=\"button\" className={'btn btn-sm btn-danger'} onClick={() => {\n                              const isConfirmed = window.confirm('Are you sure you want to remove this equipment?');\n                              if (isConfirmed) {\n                                this.removeEquipment(key)\n                              }\n                            }}>\n                              <i className={'bi bi-dash-circle-fill'}></i>\n                            </button>\n                          </td>\n                        </tr>\n                      )})}\n                  </tbody>\n                </table>\n                <button type=\"button\" className={'btn btn-primary mt-2'} onClick={() => this.addEquipment()}>\n                  <i className={'bi bi-plus-circle-fill'}></i> Felszerelés hozzáadása\n                </button>\n              </div>\n              <div className={'panel'}>\n                <div className=\"separator\">Jegyzetek</div>\n                <textarea className={'notes'} value={character.notes || ''} onChange={event => this.setCharacterProperty('notes', event.target.value)}/>\n              </div>\n            </ReactSwipe>\n          </div>\n        </div>\n      </div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}